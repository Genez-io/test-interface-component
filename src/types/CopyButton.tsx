import { useState } from "react";

interface CopyButtonProps {
  text: string;
}

export const CopyButton: React.FC<CopyButtonProps> = ({ text }) => {
  const [copied, setCopied] = useState(false);

  const copyToClipboard = () => {
    navigator.clipboard
      .writeText(text)
      .then(() => {
        setCopied(true);
        setTimeout(() => setCopied(false), 2000); // Revert to original SVG after 2 seconds
      })
      .catch((error) => console.error("Copy failed:", error));
  };

  return (
    <button
      style={{ background: "transparent", outline: "none", border: "none", height: "15px" }}
      className="btn-svg mx-4 d-flex align-items-center justify-content-center"
      onClick={copyToClipboard}
    >
      {copied ? (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="20" height="20" fill="none">
          <path d="M186.301 339.893L96 249.461l-32 30.507L186.301 402 448 140.506 416 110z" fill="#666666" />
        </svg>
      ) : (
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g clipPath="url(#clip0_4145_3195)">
            <path
              d="M15.8333 1.6665C16.2754 1.6665 16.6993 1.8421 17.0118 2.15466C17.3244 2.46722 17.5 2.89114 17.5 3.33317V13.3332C17.5 13.7752 17.3244 14.1991 17.0118 14.5117C16.6993 14.8242 16.2754 14.9998 15.8333 14.9998H14.1667V16.6665C14.1667 17.1085 13.9911 17.5325 13.6785 17.845C13.3659 18.1576 12.942 18.3332 12.5 18.3332H4.16667C3.72464 18.3332 3.30072 18.1576 2.98816 17.845C2.67559 17.5325 2.5 17.1085 2.5 16.6665V6.6665C2.5 6.22448 2.67559 5.80055 2.98816 5.48799C3.30072 5.17543 3.72464 4.99984 4.16667 4.99984H5.83333V3.33317C5.83333 2.89114 6.00893 2.46722 6.32149 2.15466C6.63405 1.8421 7.05797 1.6665 7.5 1.6665H15.8333ZM12.5 6.6665H4.16667V16.6665H12.5V6.6665ZM8.33333 12.4998C8.55435 12.4998 8.76631 12.5876 8.92259 12.7439C9.07887 12.9002 9.16667 13.1122 9.16667 13.3332C9.16667 13.5542 9.07887 13.7661 8.92259 13.9224C8.76631 14.0787 8.55435 14.1665 8.33333 14.1665H6.66667C6.44565 14.1665 6.23369 14.0787 6.07741 13.9224C5.92113 13.7661 5.83333 13.5542 5.83333 13.3332C5.83333 13.1122 5.92113 12.9002 6.07741 12.7439C6.23369 12.5876 6.44565 12.4998 6.66667 12.4998H8.33333ZM15.8333 3.33317H7.5V4.99984H12.5C12.942 4.99984 13.3659 5.17543 13.6785 5.48799C13.9911 5.80055 14.1667 6.22448 14.1667 6.6665V13.3332H15.8333V3.33317ZM10 9.1665C10.2124 9.16674 10.4167 9.24807 10.5711 9.39388C10.7256 9.53968 10.8185 9.73897 10.831 9.951C10.8434 10.163 10.7744 10.3718 10.6381 10.5347C10.5018 10.6976 10.3084 10.8023 10.0975 10.8273L10 10.8332H6.66667C6.45427 10.8329 6.24997 10.7516 6.09553 10.6058C5.94108 10.46 5.84814 10.2607 5.83569 10.0487C5.82324 9.83664 5.89223 9.62785 6.02855 9.46498C6.16488 9.3021 6.35825 9.19742 6.56917 9.17234L6.66667 9.1665H10Z"
              fill="#666666"
            />
          </g>
          <defs>
            <clipPath id="clip0_4145_3195">
              <rect width="20" height="20" fill="white" />
            </clipPath>
          </defs>
        </svg>
      )}
    </button>
  );
};
